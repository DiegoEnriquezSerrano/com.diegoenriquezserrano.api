services:
  py-postgres:
    image: postgres:17-alpine
    env_file: .env
    networks:
      - dokploy-network
    ports:
      - 5433
    volumes:
      - py-postgres:/var/lib/postgresql/data
  py-api:
    build:
      dockerfile: Dockerfile.production
    command: >
      sh -c "python manage.py migrate &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 py_api.wsgi:application"
    depends_on:
      - py-postgres
    env_file: .env
    networks:
      - dokploy-network
    ports:
      - 8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.py-api.rule=Host(`api.diegoenriquezserrano.com`)"
      - "traefik.http.routers.py-api.entrypoints=websecure"
      - "traefik.http.routers.py-api.tls.certResolver=letsencrypt"
      - "traefik.http.services.py-api.loadbalancer.server.port=8000"
  py-meilisearch:
    env_file: .env
    image: getmeili/meilisearch:v1.15
    networks:
      - dokploy-network
    ports:
      - 7770
    volumes:
      - py-meilisearch:/data.ms
  py-valkey:
    env_file: .env
    image: valkey/valkey:8.0-alpine
    networks:
      - dokploy-network
    ports:
      - 63792
    volumes:
      - py-valkey:/data
  py-cache:
    env_file: .env
    image: valkey/valkey:8.0-alpine
    networks:
      - dokploy-network
    ports:
      - 63793
    volumes:
      - py-cache:/data
volumes:
  py-postgres:
  py-valkey:
  py-cache:
  py-meilisearch:
networks:
  dokploy-network:
    external: true
