name: Django CI

on:
  push:
    branches: [main]
  pull_request:

env:
  ALLOWED_HOST_DEVELOPMENT: ${{ secrets.ALLOWED_HOST_DEVELOPMENT }}
  ALLOWED_HOST_DOCKER: ${{ secrets.ALLOWED_HOST_DOCKER }}
  ALLOWED_HOST_URL: ${{ secrets.ALLOWED_HOST_URL }}
  AUTH_COOKIE_DOMAIN: ${{ secrets.AUTH_COOKIE_DOMAIN }}
  AUTH_COOKIE_HTTP_ONLY: ${{ secrets.AUTH_COOKIE_HTTP_ONLY }}
  AUTH_COOKIE_NAME: ${{ secrets.AUTH_COOKIE_NAME }}
  AUTH_COOKIE_PATH: ${{ secrets.AUTH_COOKIE_PATH }}
  AUTH_COOKIE_SAMESITE: ${{ secrets.AUTH_COOKIE_SAMESITE }}
  AUTH_COOKIE_SECURE: ${{ secrets.AUTH_COOKIE_SECURE }}
  CORS_ALLOWED_ORIGIN_CLIENT: ${{ secrets.CORS_ALLOWED_ORIGIN_CLIENT }}
  DATABASE_ENGINE: ${{ secrets.DATABASE_ENGINE }}
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DEBUG: ${{ secrets.DEBUG }}
  DJANGO_ENVIRONMENT: ${{ secrets.DJANGO_ENVIRONMENT }}
  DJANGO_LOGLEVEL: ${{ secrets.DJANGO_LOGLEVEL }}
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
          POSTGRES_HOST: ${{ secrets.DATABASE_HOST }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DATABASE_USERNAME }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.12
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          python manage.py test
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install ruff
        uses: astral-sh/ruff-action@v3
      - name: Run linter
        run: ruff check
      - name: Run formatter
        run: ruff format --check
