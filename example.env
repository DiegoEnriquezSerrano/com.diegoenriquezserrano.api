# Allowed server hostnames.
ALLOWED_HOST_DEVELOPMENT=
# Allowed server hostname for container environment.
ALLOWED_HOST_DOCKER=
# Used in non-development environments where one hostname is assumed.
ALLOWED_HOST_URL=

# Domain name for JWT cookie. Default=None.
AUTH_COOKIE_DOMAIN=
# Restrict cookie from client side. Default=False. Recommended True.
AUTH_COOKIE_HTTP_ONLY=
# Name for JWT cookie.
AUTH_COOKIE_NAME=
# Specify cookie server path. Default "/"
AUTH_COOKIE_PATH=
# Specify cross-site request cookie restrictions.
AUTH_COOKIE_SAMESITE=
# Only transport cookies on HTTPS. Default=False.
AUTH_COOKIE_SECURE=

# Allowed cross-origin requests domain (Client app).
CORS_ALLOWED_ORIGIN_CLIENT=

# Database engine to use
DATABASE_ENGINE=
# Hostname or IP address of the database server (e.g., 'localhost', 'db.example.com').
DATABASE_HOST=
# Name of the database to connect to.
DATABASE_NAME=
# Password for the database user.
DATABASE_PASSWORD=
# Port number on which the database server is listening (e.g., '5432' for PostgreSQL).
DATABASE_PORT=
# Username used to authenticate with the database.
DATABASE_USERNAME=

# !Important!: Set to False in production. Useful in development.
DEBUG=

# Default “from” email address for all outgoing emails sent by Django.
DEFAULT_FROM_EMAIL=

# The current running environment of the Django project (e.g., "development", "test", "staging", "production").
DJANGO_ENVIRONMENT=
# !Important!: Level of logging in application. Set only to WARNING or ERROR in production.
DJANGO_LOGLEVEL=
# !Important!: Set crytographically secure value in production. DO NOT LEAK.
DJANGO_SECRET_KEY=

# Mailgun account token for API authentication (your Mailgun Account API token).
MAILGUN_API_KEY=
# Default "from" email address that will appear as the sender for Mailgun.
# It should be a verified email address in your Mailgun account.
MAILGUN_FROM_EMAIL=
# Custom domain for sending emails through Mailgun.
# It should be configured in your DNS settings to ensure proper email delivery and branding.
MAILGUN_CNAME=

# Master key used to authenticate requests to the Meilisearch server.
MEILI_MASTER_KEY=
# The current running environment of the Meilisearch service (e.g., "development", "test", "staging", "production").
MEILI_ENV=
# When set to 'true', disables Meilisearch telemetry.
MEILI_NO_ANALYTICS=
# Logging level for Meilisearch (e.g. 'error', 'warn', 'info', and 'debug').
MEILI_LOG_LEVEL=
# HTTP address for the Meilisearch server. syntax = 'http://<host>:<port>'.
MEILI_HTTP_ADDR=

# Postmark account token for API authentication (your Postmark Account API token).
POSTMARK_ACCOUNT_TOKEN=
# Postmark server token used to send emails from a specific server (your Postmark Server API token).
POSTMARK_SERVER_TOKEN=
# Enable Postmark test mode (True or False). When True, emails are not actually sent.
POSTMARK_TEST_MODE=
# Timeout (in seconds) for Postmark API requests.
POSTMARK_TIMEOUT=
# Verbosity level for Postmark client logging (e.g., 0=none, 1=basic, 2=debug).
POSTMARK_VERBOSITY=

# Default “from” email address for outgoing Django emails (e.g., "no-reply@example.com").
SERVER_EMAIL=
# Domain used for the server's email address.
SERVER_EMAIL_DOMAIN=

# Key for worker valkey instance.
VALKEY_PASSWORD=
# Port for worker valkey instance.
VALKEY_PORT=
# Number of I/O threads for worker valkey instance.
VALKEY_IO_THREADS=
# Log level for the worker valkey instance. (e.g.'error', 'warn', 'info', and 'debug').
VALKEY_LOG_LEVEL=

# Key for cache valkey instance.
VALKEY_CACHE_PASSWORD=
# Port for cache valkey instance.
VALKEY_CACHE_PORT=
# Number of I/O threads for cache valkey instance.
VALKEY_CACHE_IO_THREADS=
# Log level for the cache valkey instance. (e.g.'error', 'warn', 'info', and 'debug').
VALKEY_CACHE_LOG_LEVEL=
