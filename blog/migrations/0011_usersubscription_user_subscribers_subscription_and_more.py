# Generated by Django 5.2.4 on 2025-07-23 03:25

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0010_alter_profile_bluesky'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('activated_date', models.DateTimeField(blank=True, null=True)),
                ('deactivated_date', models.DateTimeField(blank=True, null=True)),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-activated_date'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='subscribers',
            field=models.ManyToManyField(related_name='subscribed', through='blog.UserSubscription', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activated_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('deactivated_date', models.DateTimeField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(blank=True, null=True, validators=[django.core.validators.MaxLengthValidator(70)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-activated_date'],
                'indexes': [models.Index(fields=['user', 'email'], include=('active',), name='subscription_email_idx')],
                'constraints': [models.UniqueConstraint(fields=('user', 'email'), name='unique_subscriptions'), models.CheckConstraint(condition=models.Q(('activated_date__isnull', False), ('deactivated_date__isnull', False), _connector='OR'), name='prevent_subscriptions_deactivated_and_activated_null'), models.CheckConstraint(condition=models.Q(('activated_date__isnull', True), ('deactivated_date__isnull', True), _connector='OR'), name='prevent_subscriptions_deactivated_and_activated_present'), models.CheckConstraint(condition=models.Q(models.Q(('activated_date__isnull', False), ('active', True)), models.Q(('active', False), ('deactivated_date__isnull', False)), _connector='OR'), name='prevent_subscriptions_active_and_activated_date_null')],
            },
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['user', 'subscriber'], include=('active',), name='user_subscribers_idx'),
        ),
        migrations.AddIndex(
            model_name='usersubscription',
            index=models.Index(fields=['subscriber', 'user'], include=('active',), name='user_subscribed_idx'),
        ),
        migrations.AddConstraint(
            model_name='usersubscription',
            constraint=models.UniqueConstraint(fields=('user', 'subscriber'), name='unique_user_subscriptions'),
        ),
        migrations.AddConstraint(
            model_name='usersubscription',
            constraint=models.CheckConstraint(condition=models.Q(('subscriber', models.F('user')), _negated=True), name='blog_usersubscription_prevent_self_subscribe'),
        ),
        migrations.AddConstraint(
            model_name='usersubscription',
            constraint=models.CheckConstraint(condition=models.Q(('activated_date__isnull', False), ('deactivated_date__isnull', False), _connector='OR'), name='prevent_user_subscription_deactivated_and_activated_null'),
        ),
        migrations.AddConstraint(
            model_name='usersubscription',
            constraint=models.CheckConstraint(condition=models.Q(('activated_date__isnull', True), ('deactivated_date__isnull', True), _connector='OR'), name='prevent_user_subscription_deactivated_and_activated_present'),
        ),
        migrations.AddConstraint(
            model_name='usersubscription',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('activated_date__isnull', False), ('active', True)), models.Q(('active', False), ('deactivated_date__isnull', False)), _connector='OR'), name='prevent_user_subscriptions_active_and_activated_date_null'),
        ),
    ]
